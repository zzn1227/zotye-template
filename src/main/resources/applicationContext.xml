<?xml version="1.0" encoding="UTF-8"?>
<!-- Repository and Service layers -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task.xsd">

	<!-- use annotation config -->
	<context:annotation-config />
	
	<!-- 对包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能，不包括controller -->
    <context:component-scan base-package="com.service" >
    	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

	<!-- 加载数据库配置文件 -->
	<context:property-placeholder location="classpath:database.properties"/>
	
	<!-- Tomcat JDBC Pool configuration -->
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">  
	    <property name="driverClassName"><value>${jdbc.driverClassName}</value></property>  
	    <property name="url"><value>${jdbc.url}</value></property>  
	    <property name="username" ><value>${jdbc.username}</value></property>  
	    <property name="password"><value>${jdbc.password}</value></property>  
	    <property name="maxActive"><value>50</value></property>
	    <property name="maxIdle"><value>48</value></property>   
	    <property name="initialSize"><value>2</value></property>  
	  
	    <property name="validationQuery"><value>SELECT 1</value></property>  
	    <property name="testOnBorrow"><value>true</value></property>  
	    <property name="testOnReturn"><value>true</value></property>  
	    <property name="testWhileIdle"><value>true</value></property>  
	</bean>	

	<!-- transaction -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">  
	    <tx:attributes>
	    	<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="query*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="select*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="search*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />
	    </tx:attributes>  
	</tx:advice>
	<aop:config>
		<aop:pointcut id="serviceMethods" expression="execution(* com.service..*.*(..))"/>   
	 	<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods"/>   
	</aop:config>
	
	<bean id="txTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager"></property>
	</bean>

	<!-- define the SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.model" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- 如果映射接口和映射xml同名且在同一个目录下，不需要此属性
		<property name="mapperLocations" value="classpath:sqlmapper/*.xml"></property>
		 -->
	</bean>

	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.persistence" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!--  通过Service注解来注入
	<bean id="carTypeService" class="com.zzn.springmvc.service.CarTypeService"></bean>
	-->

	<!-- 加载配置文件，可以在bean中通过@Value注解进行注入 -->
	<bean id="configProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:settings.properties</value>
			</list>
		</property>
	</bean>

</beans>