<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="  
        http://www.springframework.org/schema/beans       
        http://www.springframework.org/schema/beans/spring-beans.xsd  
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context.xsd  
        http://www.springframework.org/schema/mvc  
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 对包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
    <context:component-scan base-package="com.controller"/>
    <!-- 控制根路径跳转 
    <mvc:view-controller path="/" view-name="redirect:/index"/>
    -->
    
	<!-- For static resources -->
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.controller.interceptor.LoginInterceptor">
				<property name="allowUrls">
					<list>
						<!-- 如果请求中包含以下路径，则不进行拦截 -->
						<value>/js</value>
						<value>/css</value>
						<value>/less</value>
						<value>/images</value>
						<value>/user/doLogin</value>
						<value>/user/logout</value>
						
						<value>/user/register</value>
						<value>/user/sendRegisterAuthCode</value>
						<value>/user/sendResetAuthCode</value>
						<value>/user/sendAuthCodeFail</value>
						<value>/user/resetPassword</value>
						<value>/user/checkLogin</value>
						
						<!-- test -->
						<value>/test</value>
					</list>
				</property>
			</bean>
		</mvc:interceptor>
		<!-- 返回view时,给分页数组添加分页器，旧的分页插件
	    <mvc:interceptor>
	        <mvc:mapping path="/**" />
	        <bean class="com.github.miemiedev.mybatis.paginator.springmvc.PageListAttrHandlerInterceptor" />
	    </mvc:interceptor>
	    -->
	</mvc:interceptors>	
	
    <mvc:annotation-driven>
	    <mvc:message-converters register-defaults="true">
	        <bean class="org.springframework.http.converter.StringHttpMessageConverter"> 
	            <constructor-arg value="UTF-8" />        
	        </bean>
	        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	        	<!--  
	        	<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
				-->
	        	<!-- 返回分页json数组时,添加分页信息 
	            <property name="objectMapper">
	                <bean class="com.github.miemiedev.mybatis.paginator.jackson2.PageListJsonMapper" />
	            </property>
	            -->
	        </bean>
	    </mvc:message-converters>
	</mvc:annotation-driven>
    
	<!-- velocity config -->
	<bean id="velocityConfigurer" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath" value="velocity" />
		<property name="velocityProperties">
			<props>
				<!--  
				<prop key="velocimacro.library">/macros.vm</prop>
				-->
				<prop key="input.encoding">utf-8</prop> 
				<prop key="output.encoding">utf-8</prop>
			</props>
		</property>
	</bean>

	<!-- ViewResolver -->
	<bean id="velocityViewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="suffix" value=".vm" />
		<property name="contentType" value="text/html;charset=utf-8" />

		<property name="exposeSpringMacroHelpers" value="true" /><!--是否使用spring对宏定义的支持-->
		<property name="exposeRequestAttributes" value="true" /><!--是否开放request属性-->
		<property name="requestContextAttribute" value="rc"/><!--request属性引用名称-->
		<property name="exposeSessionAttributes" value="true" />

		<property name="toolboxConfigLocation" value="/WEB-INF/velocity-toolbox.xml" />
		<!-- 自定义VelocityToolboxView,支持velocity tools 2.0 -->
		<property name="viewClass" value="com.velocity.VelocityToolsView" />
	</bean>


	<!--  
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
							<value>application/json;charset=UTF-8</value>
						</list>
					</property>
					<property name="objectMapper">
		                <bean class="com.github.miemiedev.mybatis.paginator.jackson2.PageListJsonMapper" />
		            </property>
				</bean>
			</list>
		</property>
	</bean>
	-->

	<!-- 文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="200000" />
	</bean>
</beans>